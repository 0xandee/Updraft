{
  "courseId": "assembly-opcodes-formal-verification",
  "slug": "assembly-opcodes-formal-verification",
  "createdAt": "2024-02-20T05:00:00.000Z",
  "updatedAt": "2024-02-20T23:03:35.656Z",
  "title": "Assembly, EVM Opcodes, and Formal Verification",
  "path": "content/learning-paths/solidity-developer.json",
  "githubUrl": "https://github.com/Cyfrin/assembly-evm-opcodes-and-formal-verification-course",
  "previewImg": "https://res.cloudinary.com/droqoz7lg/image/upload/v1708469922/Code_Pro_n31s2s.png",
  "duration": 1,
  "description": "Welcome to the repository for the Assembly, EVM Opcodes, and Formal Verification Course by Cyfrin Updraft!\n\nThis is the ultimate low-level course to become the top 1% of smart contract contract developers and security researchers. \n\n## Outcome\n* Be able to decompile a smart contract right from the raw bytecode\n* Be able to understand exactly how EVM opcodes work so you can write more gas-efficient code\n* Learn the Huff smart contract programming language\n* Be able to write formal verification in Halmos & Certora\n* Be able to understand the difference between Fuzzing & Formal Verification\n* Have an intermediate understanding of how to write Formal Verification tests for solidity ",
  "overview": {
    "learnings": "1. Why you should learn the EVM, Opcodes, Assembly, and Formal Verification\n2. How to decompile a smart contract\n3. How to read the binary of a smart contract - you don't even need to know solidity anymore! \n4. How to write in the huff and yul smart contract languages\n5. How to optimize your codebase for gas, know that you know what every opcode does\n6. How to build formal verification test suites with Halmos and Certora\n7. Understand the tradeoffs of using formal verification vs fuzzing \n8. How to check for invariants and formally prove them \n",
    "preRequisites": [
      "Required: A strong understanding of Solidity or Vyper ",
      "Preferred: The [Security and Auditing Course](https://updraft.cyfrin.io/courses/security) completed",
      "Nice to have: Advanced Foundry Skills "
    ]
  }
}